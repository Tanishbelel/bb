# Generated by Django 3.2.25 on 2025-09-21 04:07

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('main', '0002_auto_20250921_0251'),
    ]

    operations = [
        migrations.CreateModel(
            name='Coupon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('coupon_type', models.CharField(choices=[('discount', 'Discount Coupon'), ('cashback', 'Cashback Offer'), ('freebie', 'Free Product/Service'), ('experience', 'Experience Voucher')], max_length=20)),
                ('brand_name', models.CharField(max_length=100)),
                ('brand_logo', models.URLField(blank=True)),
                ('token_cost', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('original_value', models.DecimalField(decimal_places=2, max_digits=10)),
                ('discount_percentage', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('stock_quantity', models.IntegerField(default=0)),
                ('used_quantity', models.IntegerField(default=0)),
                ('status', models.CharField(choices=[('active', 'Active'), ('expired', 'Expired'), ('out_of_stock', 'Out of Stock'), ('inactive', 'Inactive')], default='active', max_length=20)),
                ('valid_from', models.DateTimeField()),
                ('valid_until', models.DateTimeField()),
                ('terms_conditions', models.TextField()),
                ('coupon_code_prefix', models.CharField(default='PB', max_length=10)),
                ('is_featured', models.BooleanField(default=False)),
                ('category', models.CharField(default='General', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='TokenEarningRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_type', models.CharField(max_length=30, unique=True)),
                ('tokens_per_action', models.IntegerField()),
                ('max_daily_tokens', models.IntegerField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('description', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='TokenPackage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('token_amount', models.IntegerField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=8)),
                ('bonus_tokens', models.IntegerField(default=0)),
                ('is_popular', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('order', models.IntegerField(default=0)),
            ],
            options={
                'ordering': ['order', 'price'],
            },
        ),
        migrations.CreateModel(
            name='UserCoupon',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('coupon_code', models.CharField(max_length=50, unique=True)),
                ('tokens_spent', models.IntegerField()),
                ('purchase_date', models.DateTimeField(auto_now_add=True)),
                ('redemption_date', models.DateTimeField(blank=True, null=True)),
                ('expiry_date', models.DateTimeField()),
                ('status', models.CharField(choices=[('purchased', 'Purchased'), ('redeemed', 'Redeemed'), ('expired', 'Expired'), ('refunded', 'Refunded')], default='purchased', max_length=20)),
                ('coupon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.coupon')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_coupons', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TokenTransaction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('transaction_type', models.CharField(choices=[('earned_quiz', 'Quiz Completion'), ('earned_module', 'Module Completion'), ('earned_scenario', 'Fraud Scenario'), ('earned_goal', 'Goal Achievement'), ('earned_streak', 'Streak Bonus'), ('earned_investment', 'Investment Profit'), ('purchased', 'Token Purchase'), ('spent_coupon', 'Coupon Purchase'), ('bonus', 'Bonus Reward'), ('refund', 'Refund')], max_length=20)),
                ('amount', models.IntegerField()),
                ('balance_after', models.IntegerField()),
                ('description', models.CharField(max_length=200)),
                ('related_object_id', models.CharField(blank=True, max_length=50)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='token_transactions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Token',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('balance', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('total_earned', models.IntegerField(default=0)),
                ('total_spent', models.IntegerField(default=0)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='tokens', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
